type VaultDeposit @entity {
  id: String!
  vault: Vault!
  user: Bytes!
  amount: BigInt!
  timestamp: BigInt!
}

type VaultWithdraw @entity {
  id: String!
  vault: Vault!
  user: Bytes!
  amount: BigInt!
  timestamp: BigInt!
}

type VaultReward @entity {
  id: String!
  vault: Vault!
  apr: BigInt!
  reward: BigInt!
  timestamp: BigInt!
}

type VaultInfo @entity {
  id: String!
  vault: Vault!
  timestamp: BigInt!
  tvl: BigInt!
  apr: BigInt!
  totalSupplied: BigInt!
  totalBorrowed: BigInt!
  totalBorrowable: BigInt!
  lastCompoundTimestamp: BigInt!
}

type Vault @entity {
  id: String!
  infos: [VaultInfo!]! @derivedFrom(field: "vault")
  underlying: Bytes!
  decimals: BigInt!
  tokenName: String!
  deposits: [VaultDeposit!]! @derivedFrom(field: "vault")
  withdrawals: [VaultWithdraw!]! @derivedFrom(field: "vault")
  rewards: [VaultReward!]! @derivedFrom(field: "vault")
}

type Lock @entity {
  id: String!
  nftID: BigInt!
  user: Bytes!
  amount: BigInt!
  tx: Bytes!
  timestamp: BigInt!
  merged: Boolean!
}

type Vote @entity {
  id: String!
  user: Bytes!
  nftID: BigInt!
  amount: BigInt!
  pool: Bytes!
  timestamp: BigInt!
  lock: Lock
}

type Competition @entity {
  id: String!
  matchId: BigInt!
  openStatus: Boolean!
  host: BigInt!
  guest: BigInt!
  result: BigInt!
  currentBetId: BigInt!
  totalAmountMatchedEffective: BigInt!
  competitionPendingAmount: BigInt!
  outright: Boolean!
  live: Boolean!
  hidden: Boolean!
  startDate: BigInt!
  additionalHome: String!
  additionalAway: String!
  betType: String!
  preview: Boolean!
  bets: [Bet!]! @derivedFrom(field: "competition")
}

type Bet @entity {
  id: String!
  betId: BigInt!
  competition: Competition!
  backUser: Bytes!
  team: BigInt!
  pendingAmount: BigInt!
  totalMatched: BigInt!
  odd: BigInt!
  effectiveOdd: BigInt!
  collateral: BigInt!
  matchetBetsListLength: BigInt!
  matchedBetsList: [MatchedBet!]! @derivedFrom(field: "bet")
  settled: Boolean!
}

type MatchedBet @entity {
  id: String!
  bet: Bet!
  layUser: Bytes!
  amount: BigInt!
}
