type VaultDeposit @entity {
  id: String!
  vault: Vault!
  user: Bytes!
  amount: BigInt!
}

type VaultWithdraw @entity {
  id: String!
  vault: Vault!
  user: Bytes!
  amount: BigInt!
}

type VaultReward @entity {
  id: String!
  vault: Vault!
  apr: BigInt!
  reward: BigInt!
  timestamp: BigInt!
}

type VaultInfo @entity {
  id: String!
  vault: Vault!
  timestamp: BigInt!
  tvl: BigInt!
  apr: BigInt!
  totalSupplied: BigInt!
  totalBorrowed: BigInt!
  totalBorrowable: BigInt!
  lastCompoundTimestamp: BigInt!
}

type Vault @entity {
  id: String!
  infos: [VaultInfo!]! @derivedFrom(field: "vault")
  underlying: Bytes!
  decimals: BigInt!
  tokenName: String!
  deposits: [VaultDeposit!]! @derivedFrom(field: "vault")
  withdrawals: [VaultWithdraw!]! @derivedFrom(field: "vault")
  rewards: [VaultReward!]! @derivedFrom(field: "vault")
}
